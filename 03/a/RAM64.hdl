// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl
// Name: Luke Reynolds

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in = load, sel = address[0..2], a = DMuxA, b = DMuxB, c = DMuxC, d = DMuxD, e = DMuxE, f = DMuxF, g = DMuxG, h = DMuxH);
	
    RAM8( in = in, load = DMuxA, address = address[3..5], out = RAM8OutA);
	RAM8( in = in, load = DMuxB, address = address[3..5], out = RAM8OutB);
	RAM8( in = in, load = DMuxC, address = address[3..5], out = RAM8OutC);
	RAM8( in = in, load = DMuxD, address = address[3..5], out = RAM8OutD);
	RAM8( in = in, load = DMuxE, address = address[3..5], out = RAM8OutE);
	RAM8( in = in, load = DMuxF, address = address[3..5], out = RAM8OutF);
	RAM8( in = in, load = DMuxG, address = address[3..5], out = RAM8OutG);
	RAM8( in = in, load = DMuxH, address = address[3..5], out = RAM8OutH);
	
	Mux8Way16(a = RAM8OutA, b = RAM8OutB, c = RAM8OutC, d = RAM8OutD, e = RAM8OutE, f = RAM8OutF, g = RAM8OutG, h = RAM8OutH, sel = address[0..2], out = out);
}